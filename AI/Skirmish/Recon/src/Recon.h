/* This file is part of the Spring engine (GPL v2 or later), see LICENSE.html */

#ifndef _recon_recon_H
#define _recon_recon_H

// generated by the C++ Wrapper scripts
#include "OOAICallback.h"
#include <map>

namespace recon {

/**
 * This is the main C++ entry point of this AI.
 * 
 * @author	Robin Vobruba <hoijui.quaero@gmail.com>
 */
class Recon {

	enum {
	        MOVESTATE_NONE     = -1,
	        MOVESTATE_HOLDPOS  =  0,
	        MOVESTATE_MANEUVER =  1,
	        MOVESTATE_ROAM     =  2,
	};
	enum {
	        FIRESTATE_NONE       = -1,
	        FIRESTATE_HOLDFIRE   =  0,
	        FIRESTATE_RETURNFIRE =  1,
	        FIRESTATE_FIREATWILL =  2,
	        FIRESTATE_FIREATNEUTRAL =  3,
	};

private:
	springai::OOAICallback* callback;
	int skirmishAIId;
    int numPlanes;
    std::string prefix;
    springai::UnitDef* reconUnitDef;
    springai::Unit* hq;
    void AddPlane(int unitId);
    void GetUnitById(int id, std::vector<springai::Unit*> const& units, springai::Unit** unit) const;
    springai::Unit* GetFriendlyUnitById(int id) const;
    springai::Unit* GetEnemyUnitById(int id) const;
    std::vector<std::vector<springai::AIFloat3> > waypoints;
    std::map<int,int> u2i;
    std::vector<int> ustat;
public:
	Recon(springai::OOAICallback* callback);
	~Recon();

	int HandleEvent(int topic, const void* data);
}; // class Recon

} // namespace recon

#endif // _recon_recon_H

