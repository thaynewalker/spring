/* This file is part of the Spring engine (GPL v2 or later), see LICENSE.html */

#ifndef _incumbent_incumbent_H
#define _incumbent_incumbent_H

// generated by the C++ Wrapper scripts
#include "OOAICallback.h"

namespace incumbent {

enum {
        MOVESTATE_NONE     = -1,
        MOVESTATE_HOLDPOS  =  0,
        MOVESTATE_MANEUVER =  1,
        MOVESTATE_ROAM     =  2,
};
enum {
        FIRESTATE_NONE       = -1,
        FIRESTATE_HOLDFIRE   =  0,
        FIRESTATE_RETURNFIRE =  1,
        FIRESTATE_FIREATWILL =  2,
        FIRESTATE_FIREATNEUTRAL =  3,
};

/**
 * This is the main C++ entry point of this AI.
 * 
 * @author	Robin Vobruba <hoijui.quaero@gmail.com>
 */
class Incumbent {

private:
	springai::OOAICallback* callback;
	int skirmishAIId;
	// this map contains pointers in the friends table.
	std::map<springai::Unit*,std::vector<springai::Unit*> > inrangeTable;
	std::vector<springai::Unit*> friends;
	unsigned frame;

public:
	Incumbent(springai::OOAICallback* callback);
	~Incumbent();

	int HandleEvent(int topic, const void* data);
}; // class Incumbent

} // namespace incumbent

#endif // _incumbent_incumbent_H

